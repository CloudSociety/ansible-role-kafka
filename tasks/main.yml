---
- name: Get all hosts in the same kafka group as current host
  ansible.builtin.set_fact:
    kafka_group_hosts: "{{ groups[item] | sort }}"
  loop: "{{ groups.keys() | list }}"
  when:
    - inventory_hostname in groups[item]
    - item is search('kafka')

- name: Create Kafka Broker group
  ansible.builtin.group:
    name: "{{ kafka_install.group }}"

- name: Create Kafka Broker user
  ansible.builtin.user:
    name: "{{ kafka_install.user }}"
    comment: Confluent Kafka
    system: true
    shell: "{{ kafka_install.user_login_shell }}"
    group: "{{ kafka_install.group }}"

- name: Install Java on Rhel
  ansible.builtin.dnf:
    name: "{{ kafka_install.rhl_java_package_name }}"
    state: present
  register: java_install_result
  until: java_install_result is success
  retries: 10
  delay: 5
  when:
    - ansible_os_family == "RedHat"

- name: Make sure confluent repo exists
  ansible.builtin.stat:
    path: /etc/yum.repos.d/confluent.repo
  register: confluent_yum_repo


- name: Add confluent yum repository on RedHat based distros
  when:
    - ansible_os_family == "RedHat"
    - kafka_install.method == "package"
    - not confluent_yum_repo.stat.exists
  block:
    - name: Render out confluent yum repository template
      ansible.builtin.template:
        src: "confluent.repo.j2"
        dest: "/etc/yum.repos.d/confluent.repo"
        owner: root
        group: root
        mode: "0644"
    - name: Update dnf cache to recognize confluent repository
      ansible.builtin.dnf:
        update_cache: true

- name: Install Kafka packages using package manager on redhat bases distros
  when:
    - ansible_os_family == "RedHat"
    - kafka_install.method == "package"
  block:
    - name: Set broker package list with version suffix
      ansible.builtin.set_fact:
        kafka_broker_full_pkgs: "{{ kafka_install.broker_pkgs | product(['-' + kafka_install.version + '-1']) | map('join') | list }}"

    - name: Set controller package list with version suffix
      ansible.builtin.set_fact:
        kafka_controller_full_pkgs: "{{ kafka_install.controller_pkgs | product(['-' + kafka_install.version + '-1']) | map('join') | list }}"

    - name: Install Kafka broker packages
      ansible.builtin.dnf:
        name: "{{ kafka_broker_full_pkgs }}"
        state: latest
      register: kafka_broker_install_result
      until: kafka_broker_install_result is success or ansible_check_mode
      retries: 5
      delay: 5
      ignore_errors: "{{ ansible_check_mode }}"
      notify: Restart_kafka
      when:
        - kafka_is_broker | default(false) | bool
        - kafka_broker_full_pkgs is defined

    - name: Install Kafka controller packages
      ansible.builtin.dnf:
        name: "{{ kafka_controller_full_pkgs }}"
        state: latest
      register: kafka_controller_install_result
      until: kafka_controller_install_result is success or ansible_check_mode
      retries: 5
      delay: 5
      ignore_errors: "{{ ansible_check_mode }}"
      notify: Restart_kafka
      when:
        - kafka_is_controller | default(false) | bool
        - kafka_controller_full_pkgs is defined

- name: Set Permissions on /var/lib/kafka
  ansible.builtin.file:
    path: /var/lib/kafka/
    owner: "{{ kafka_install.user }}"
    group: "{{ kafka_install.group }}"
    state: directory
    mode: '750'

- name: Render out kafka server properties
  ansible.builtin.template:
    src: server.properties.j2
    dest: "{{ kafka_files.server_conf }}"
    mode: '640'
    owner: "{{ kafka_install.user }}"
    group: "{{ kafka_install.group }}"
  notify: Restart_kafka

- name: Render out kafka log4j custom properties
  ansible.builtin.template:
    src: log4j.properties.j2
    dest: "{{ kafka_files.log4j_conf }}"
    owner: "{{ kafka_install.user }}"
    group: "{{ kafka_install.group }}"
    mode: '0644'
  when:
    - kafka_logging.custom_log4j.enabled | default(false) | bool
  notify: Restart_kafka
